<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="LAPTOP-P3VHC49B" failures="2" tests="6" name="Test" time="69.365" errors="0" timestamp="2023-05-17T07:56:20 IST">
  <testcase classname="base.BasePage" name="@AfterMethod getResult" time="0.003">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)&amp;quot; because &amp;quot;base.BasePage.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)" because "base.BasePage.test" is null
at base.BasePage.getResult(BasePage.java:121)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="testCases.DealsPageTest" name="@BeforeMethod setUp" time="-1.684290340585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="testCases.DealsPageTest" name="@AfterMethod tearDown" time="-1.684290340602E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.BasePage" name="@AfterMethod getResult" time="-1.684290340611E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="testCases.LognTestWithExcel" name="login" time="1.255">
    <failure type="org.testng.internal.reflect.MethodMatcherException" message="
[public void testCases.LognTestWithExcel.login(java.lang.String,java.lang.String) throws java.lang.InterruptedException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: login([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) kiran.masterx@gmail.com,(java.lang.String) Test@123,(java.lang.String) New Deal,(java.lang.String) MasterX,(java.lang.String) Ram ]">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void testCases.LognTestWithExcel.login(java.lang.String,java.lang.String) throws java.lang.InterruptedException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: login([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) kiran.masterx@gmail.com,(java.lang.String) Test@123,(java.lang.String) New Deal,(java.lang.String) MasterX,(java.lang.String) Ram ]
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- login -->
  <testcase classname="testCases.DealsPageTest" name="createDeal" time="14.233"/>
  <testcase classname="testCases.DealsPageTest" name="createDeal" time="0.0">
    <skipped/>
  </testcase> <!-- createDeal -->
  <testcase classname="testCases.LoginPageTest" name="verifyLoginSuccessful" time="3.76"/>
  <testcase classname="testCases.LoginPageTest" name="verifyForgotPasswordLinkDisplayed" time="0.183"/>
  <testcase classname="testCases.LoginPageTest" name="verifyForgotPasswordLinkWorking" time="3.141">
    <failure type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError
at pageObjects.ForgotPasswordPage.verifyforgotMyPasswordHeading(ForgotPasswordPage.java:21)
at testCases.LoginPageTest.verifyForgotPasswordLinkWorking(LoginPageTest.java:53)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- verifyForgotPasswordLinkWorking -->
  <testcase classname="base.BasePage" name="@AfterTest closeReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest closeReport -->
  <testcase classname="base.BasePage" name="@AfterTest closeReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest closeReport -->
  <testcase classname="base.BasePage" name="@BeforeTest startReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest startReport -->
  <testcase classname="base.BasePage" name="@BeforeTest startReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest startReport -->
</testsuite> <!-- Test -->
